openapi: 3.0.0
servers:
  - url: https://foot-api-server.com
info:
  version: latest
  title: PROG3 - TD2
paths:
  /ping:
    get:
      tags:
        - Health
      summary: Check the server
      operationId: getHealth
      responses:
        '200':
          description: The server is Up
          content:
            text/plain:
              schema:
                type: string
                example: "pong"
  /players:
    get:
      tags:
        - Players
      summary: Get all players
      operationId: getPlayers
      responses:
        '200':
          description: List of Players
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PlayerEntity'
    post:
      tags:
        - Players
      summary: Create players
      description: Be careful! Team should exist
      operationId: postPlayers
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/PlayerEntity'
      responses:
        '200':
          description: Create Players
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PlayerEntity'
  /players/{playerId}:
    put:
      tags:
        - Players
      summary: Update a player
      description: Update a playerName or the guardian role
      operationId: putPlayers
      parameters:
        - in: path
          name: playerId
          schema:
            type: integer
          description: Get the player by the player's id
        - in: query
          name: playerName
          schema:
            type: string
          description: Update the name of the player here
        - in: query
          name: isGuardian
          schema:
            type: boolean
            default: false
            enum:
              - true
              - false
          description: Update the role of the player here
      responses:
        '200':
          description: Update a player
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlayerEntity'
        '404':
          description: The player doesn't exist

  /matches:
    get:
      tags:
        - Matches
      summary: Get all matches
      operationId: getMatches
      responses:
        '200':
          description: List of Matches
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Match'
        '500':
          description: Internal server error
  /matches/{id}:
    get:
      tags:
        - Matches
      summary: Get a specific match
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
      description: Get a specific match by his id
      operationId: getMatch
      responses:
        '200':
          description: The unique match
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Match'
  /matches/{matchId}/goals:
    post:
      tags:
        - Matches
      summary: Add some goals to a match
      parameters:
        - name: matchId
          in: path
          schema:
            type: integer
          required: true
      description: Be careful! A guardian player can not score a goal.
      operationId: addGoals
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Scorer'
      responses:
        '200':
          description: The updated match with new scores
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Match'
        '400':
          description: Bad request
components:
  schemas:
    PlayerEntity:
      properties:
        teamName:
          type: string
      allOf:
        - $ref: '#/components/schemas/Player'
    Team:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
    Player:
      properties:
        id:
          type: integer
        name:
          type: string
        isGuardian:
          type: boolean
    Match:
      type: object
      properties:
        id:
          type: integer
        datetime:
          type: string
          format: datetime
        stadium:
          type: string
        teamA:
          allOf:
            - $ref: '#/components/schemas/PlayedTeam'
        teamB:
          allOf:
            - $ref: '#/components/schemas/PlayedTeam'
    PlayedTeam:
      type: object
      properties:
        team:
          $ref: '#/components/schemas/Team'
        goals:
          type: integer
        scorers:
          type: array
          items:
            $ref: '#/components/schemas/Scorer'
    Scorer:
      type: object
      properties:
        player:
          $ref: '#/components/schemas/Player'
        isOG:
          type: boolean
        scoreTime:
          type: integer
